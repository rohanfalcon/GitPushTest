<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="65">
  <HTTPTask id="3841" hostname="es00vqweb15.qa.appdev" path="/starsclassroom/SchoolAdmin/OfficialClassScheduling.aspx?OffClass=002" url="https://es00vqweb15.qa.appdev/starsclassroom/SchoolAdmin/OfficialClassScheduling.aspx?OffClass=002" ip="10.2.55.154" port="443" connectionId="43" origin="Primary" frame="1" startDateTime="2017-08-30T11:05:17.934-04:00" startTime="1302112842" endTime="1302113950">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>T2ZmQ2xhc3M9MDAy</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="OffClass" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MDAy</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="POST">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Accept" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC1tcy1hcHBsaWNhdGlvbiwgaW1hZ2UvanBlZywgYXBwbGljYXRpb24veGFtbCt4bWwsIGltYWdlL2dpZiwgaW1hZ2UvcGpwZWcsIGFwcGxpY2F0aW9uL3gtbXMteGJhcCwgYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLCBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludCwgYXBwbGljYXRpb24vbXN3b3JkLCAqLyo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9lczAwdnF3ZWIxNS5xYS5hcHBkZXYvc3RhcnNjbGFzc3Jvb20vU2Nob29sQWRtaW4vT2ZmaWNpYWxDbGFzc1NjaGVkdWxpbmcuYXNweD9PZmZDbGFzcz0wMDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgNy4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFOyBJbmZvUGF0aC4zOyAuTkVUIENMUiAxLjEuNDMyMik=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVk</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZXMwMHZxd2ViMTUucWEuYXBwZGV2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>OTg3NTU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="DNT" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LkFTUFhBVVRIPTZCRjg2Q0E4RTk5NERCRkQ1Q0Q3ODJCNzc2Njg2RTNBQ0QxNkNGRURDRDAzRjAwMDk0QzI3M0M3NDY4NUM3QzEwMzMzREY5QkQ3QkVBQTFCQTgzODk3MDVBQjBCNzM4QjVCMzU3RTAxMEFGREJBMzY1QkNCMUI2NEQ2NzU1NEQ3Q0JBQzlCMDkwQkNGMURBNTEzOEU1MkFCRkVBNzEwMUQyOTc4Mjg2ODk5RUIwRDc0MTAwMUJGQjY0MjgyMjMzOEVFRTBDNzA5Q0EwMjMzNDQzOUZDMEE4OUY2QzQ5NUIwQTY1QjYzMDNGQ0M3RDkzNUFCMTBCRkJGNkM2QjE1RjY2QTkzQzcxNjExNzlBQzg3MEU5QjJGN0U1QUQzM0I1Mjk0RUE4NEJCNkVEMzFGMzlCOEYwQkUyRUREM0U4Nzk4NUQzNUFBRDgzOEZCODFGN0QxRUYwNERBQkI2RTVFNThGMDRCNjU0NzUyQ0QwRjg0QUY1OTlBNzZBMjYyNDM4NzAzM0E0QzUyNDZEREM4QTkxMTQzMjQ5RjdCMDUxMjY2RUNGQkVGQTI2NDJFNEVCMTRBMkYxQjRFRkZEOTkyM0IwQzI1QjA0ODI0NDFBMEU2RTAxMDBGREI0N0VEM0JGQzREREU0MUFGRkVFNUYxOEFEM0RFQTNCNjVCNDVENDQxMjg0MjQyNDc5NjQwMzNCRTMxMEI5RkI3NzI0M0Q3MjFGNTRERkU1REUyQ0ZFQTQ3RkJGRDFEMDg1OTlEQzgzNzVBRkRFQ0Y4Q0YzRjExNTZDRDc2MzhDOTMyMDAzNzAxOTU5MkUyMzFFNkIyNUIzRjg1QTYyMDM4Q0UwMjdFQkQzRDk1QTRFNUFDM0FBOTY2MzQ5RTI0MkRCNEZBNEQ5QzIxMDk1QUQyREVCNDk0NERFQzQxMzg4RjU2MTM4RTgxRTY5QjQ3QUY0NDIzQjJCM0FGMEUzODEzRjlDOTIwQjU4RERCNEZCQ0QxRjY2QjM0QUQzQjc0RjIxMkM0QjQ5RkQ5Q0NBRTI0NDYwNjU2M0I5NTI5Q0E0OTlCODczNkZBRDI3MEMyNTQ4QzMzRDIwNzA3NTY5M0MyM0E3Q0IyRDRCRjhGMDcwNDcxQzBERDI2OUU2Q0VBRjE3MjY3NTg4RDM4MENCMzc0REJFRjQxMUQ3MzcyNjZFOENBODc0NzBERkNGQTlCMUM1RjI1RUYyNEI5N0UxNzFEQkRGMjAxQkMyNTc5MTA1MjRCM0JCQzRFNDhBNEY1MTUxQkU2Njg4RTdGODdCQzBERUUzODE4MTVFMTdBNzA3NkM1RDAwN0E4QTcwNkI0N0RCQzNBRTk3MzkyOUY2MEM3RDNGMjE5NUI0NTA0NUM1RjRDRkUxMEI0OTY0MkM4MTgxNEY3ODFBOEY0MEVBNTgxQzQzNzA3RUI5MTBFMEI1RjcxNjU0REQ5NEI5MTc5QUUyN0NCQ0MwMzBCMDM3RDNGNkJCRTY2NDkxREUxNThBMDZDOTM4NkRBNTY3MjNDMDdGREE4M0I4NzdERDI5NDM2RDc0QzA3QzcyNDA5RTFFNzA1OERDRTQyQTIzMzBCNDJENUNENTYyMDRDOTJFNERERjQzM0JDM0YwMzAwMDE4RjIzMDI0RjEzQ0IxM0VFODk5RDVDMzkyMDRCRjcxOUQzMkI4QUFDNkM3QzhBODQ4QzM4RTkxMDE5ODdGQUJENkFGMjI2RTA1Qjg1ODYyODREMEVFRjAyQTEzQURCREU5NjsgQVNQLk5FVF9TZXNzaW9uSWQ9cWllMG1wcWR0cHFiZWcwM3d1MmdtbXV2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UE9TVCAvc3RhcnNjbGFzc3Jvb20vU2Nob29sQWRtaW4vT2ZmaWNpYWxDbGFzc1NjaGVkdWxpbmcuYXNweD9PZmZDbGFzcz0wMDIgSFRUUC8xLjENCkFjY2VwdDogYXBwbGljYXRpb24veC1tcy1hcHBsaWNhdGlvbiwgaW1hZ2UvanBlZywgYXBwbGljYXRpb24veGFtbCt4bWwsIGltYWdlL2dpZiwgaW1hZ2UvcGpwZWcsIGFwcGxpY2F0aW9uL3gtbXMteGJhcCwgYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLCBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludCwgYXBwbGljYXRpb24vbXN3b3JkLCAqLyoNClJlZmVyZXI6IGh0dHBzOi8vZXMwMHZxd2ViMTUucWEuYXBwZGV2L3N0YXJzY2xhc3Nyb29tL1NjaG9vbEFkbWluL09mZmljaWFsQ2xhc3NTY2hlZHVsaW5nLmFzcHg/T2ZmQ2xhc3M9MDAyDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA3LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC83LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEU7IEluZm9QYXRoLjM7IC5ORVQgQ0xSIDEuMS40MzIyKQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KSG9zdDogZXMwMHZxd2ViMTUucWEuYXBwZGV2DQpDb250ZW50LUxlbmd0aDogOTg3NTUNCkROVDogMQ0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUNCkNvb2tpZTogLkFTUFhBVVRIPTZCRjg2Q0E4RTk5NERCRkQ1Q0Q3ODJCNzc2Njg2RTNBQ0QxNkNGRURDRDAzRjAwMDk0QzI3M0M3NDY4NUM3QzEwMzMzREY5QkQ3QkVBQTFCQTgzODk3MDVBQjBCNzM4QjVCMzU3RTAxMEFGREJBMzY1QkNCMUI2NEQ2NzU1NEQ3Q0JBQzlCMDkwQkNGMURBNTEzOEU1MkFCRkVBNzEwMUQyOTc4Mjg2ODk5RUIwRDc0MTAwMUJGQjY0MjgyMjMzOEVFRTBDNzA5Q0EwMjMzNDQzOUZDMEE4OUY2QzQ5NUIwQTY1QjYzMDNGQ0M3RDkzNUFCMTBCRkJGNkM2QjE1RjY2QTkzQzcxNjExNzlBQzg3MEU5QjJGN0U1QUQzM0I1Mjk0RUE4NEJCNkVEMzFGMzlCOEYwQkUyRUREM0U4Nzk4NUQzNUFBRDgzOEZCODFGN0QxRUYwNERBQkI2RTVFNThGMDRCNjU0NzUyQ0QwRjg0QUY1OTlBNzZBMjYyNDM4NzAzM0E0QzUyNDZEREM4QTkxMTQzMjQ5RjdCMDUxMjY2RUNGQkVGQTI2NDJFNEVCMTRBMkYxQjRFRkZEOTkyM0IwQzI1QjA0ODI0NDFBMEU2RTAxMDBGREI0N0VEM0JGQzREREU0MUFGRkVFNUYxOEFEM0RFQTNCNjVCNDVENDQxMjg0MjQyNDc5NjQwMzNCRTMxMEI5RkI3NzI0M0Q3MjFGNTRERkU1REUyQ0ZFQTQ3RkJGRDFEMDg1OTlEQzgzNzVBRkRFQ0Y4Q0YzRjExNTZDRDc2MzhDOTMyMDAzNzAxOTU5MkUyMzFFNkIyNUIzRjg1QTYyMDM4Q0UwMjdFQkQzRDk1QTRFNUFDM0FBOTY2MzQ5RTI0MkRCNEZBNEQ5QzIxMDk1QUQyREVCNDk0NERFQzQxMzg4RjU2MTM4RTgxRTY5QjQ3QUY0NDIzQjJCM0FGMEUzODEzRjlDOTIwQjU4RERCNEZCQ0QxRjY2QjM0QUQzQjc0RjIxMkM0QjQ5RkQ5Q0NBRTI0NDYwNjU2M0I5NTI5Q0E0OTlCODczNkZBRDI3MEMyNTQ4QzMzRDIwNzA3NTY5M0MyM0E3Q0IyRDRCRjhGMDcwNDcxQzBERDI2OUU2Q0VBRjE3MjY3NTg4RDM4MENCMzc0REJFRjQxMUQ3MzcyNjZFOENBODc0NzBERkNGQTlCMUM1RjI1RUYyNEI5N0UxNzFEQkRGMjAxQkMyNTc5MTA1MjRCM0JCQzRFNDhBNEY1MTUxQkU2Njg4RTdGODdCQzBERUUzODE4MTVFMTdBNzA3NkM1RDAwN0E4QTcwNkI0N0RCQzNBRTk3MzkyOUY2MEM3RDNGMjE5NUI0NTA0NUM1RjRDRkUxMEI0OTY0MkM4MTgxNEY3ODFBOEY0MEVBNTgxQzQzNzA3RUI5MTBFMEI1RjcxNjU0REQ5NEI5MTc5QUUyN0NCQ0MwMzBCMDM3RDNGNkJCRTY2NDkxREUxNThBMDZDOTM4NkRBNTY3MjNDMDdGREE4M0I4NzdERDI5NDM2RDc0QzA3QzcyNDA5RTFFNzA1OERDRTQyQTIzMzBCNDJENUNENTYyMDRDOTJFNERERjQzM0JDM0YwMzAwMDE4RjIzMDI0RjEzQ0IxM0VFODk5RDVDMzkyMDRCRjcxOUQzMkI4QUFDNkM3QzhBODQ4QzM4RTkxMDE5ODdGQUJENkFGMjI2RTA1Qjg1ODYyODREMEVFRjAyQTEzQURCREU5NjsgQVNQLk5FVF9TZXNzaW9uSWQ9cWllMG1wcWR0cHFiZWcwM3d1MmdtbXV2DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name=".ASPXAUTH" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NkJGODZDQThFOTk0REJGRDVDRDc4MkI3NzY2ODZFM0FDRDE2Q0ZFRENEMDNGMDAwOTRDMjczQzc0Njg1QzdDMTAzMzNERjlCRDdCRUFBMUJBODM4OTcwNUFCMEI3MzhCNUIzNTdFMDEwQUZEQkEzNjVCQ0IxQjY0RDY3NTU0RDdDQkFDOUIwOTBCQ0YxREE1MTM4RTUyQUJGRUE3MTAxRDI5NzgyODY4OTlFQjBENzQxMDAxQkZCNjQyODIyMzM4RUVFMEM3MDlDQTAyMzM0NDM5RkMwQTg5RjZDNDk1QjBBNjVCNjMwM0ZDQzdEOTM1QUIxMEJGQkY2QzZCMTVGNjZBOTNDNzE2MTE3OUFDODcwRTlCMkY3RTVBRDMzQjUyOTRFQTg0QkI2RUQzMUYzOUI4RjBCRTJFREQzRTg3OTg1RDM1QUFEODM4RkI4MUY3RDFFRjA0REFCQjZFNUU1OEYwNEI2NTQ3NTJDRDBGODRBRjU5OUE3NkEyNjI0Mzg3MDMzQTRDNTI0NkREQzhBOTExNDMyNDlGN0IwNTEyNjZFQ0ZCRUZBMjY0MkU0RUIxNEEyRjFCNEVGRkQ5OTIzQjBDMjVCMDQ4MjQ0MUEwRTZFMDEwMEZEQjQ3RUQzQkZDNERERTQxQUZGRUU1RjE4QUQzREVBM0I2NUI0NUQ0NDEyODQyNDI0Nzk2NDAzM0JFMzEwQjlGQjc3MjQzRDcyMUY1NERGRTVERTJDRkVBNDdGQkZEMUQwODU5OURDODM3NUFGREVDRjhDRjNGMTE1NkNENzYzOEM5MzIwMDM3MDE5NTkyRTIzMUU2QjI1QjNGODVBNjIwMzhDRTAyN0VCRDNEOTVBNEU1QUMzQUE5NjYzNDlFMjQyREI0RkE0RDlDMjEwOTVBRDJERUI0OTQ0REVDNDEzODhGNTYxMzhFODFFNjlCNDdBRjQ0MjNCMkIzQUYwRTM4MTNGOUM5MjBCNThEREI0RkJDRDFGNjZCMzRBRDNCNzRGMjEyQzRCNDlGRDlDQ0FFMjQ0NjA2NTYzQjk1MjlDQTQ5OUI4NzM2RkFEMjcwQzI1NDhDMzNEMjA3MDc1NjkzQzIzQTdDQjJENEJGOEYwNzA0NzFDMEREMjY5RTZDRUFGMTcyNjc1ODhEMzgwQ0IzNzREQkVGNDExRDczNzI2NkU4Q0E4NzQ3MERGQ0ZBOUIxQzVGMjVFRjI0Qjk3RTE3MURCREYyMDFCQzI1NzkxMDUyNEIzQkJDNEU0OEE0RjUxNTFCRTY2ODhFN0Y4N0JDMERFRTM4MTgxNUUxN0E3MDc2QzVEMDA3QThBNzA2QjQ3REJDM0FFOTczOTI5RjYwQzdEM0YyMTk1QjQ1MDQ1QzVGNENGRTEwQjQ5NjQyQzgxODE0Rjc4MUE4RjQwRUE1ODFDNDM3MDdFQjkxMEUwQjVGNzE2NTRERDk0QjkxNzlBRTI3Q0JDQzAzMEIwMzdEM0Y2QkJFNjY0OTFERTE1OEEwNkM5Mzg2REE1NjcyM0MwN0ZEQTgzQjg3N0REMjk0MzZENzRDMDdDNzI0MDlFMUU3MDU4RENFNDJBMjMzMEI0MkQ1Q0Q1NjIwNEM5MkU0RERGNDMzQkMzRjAzMDAwMThGMjMwMjRGMTNDQjEzRUU4OTlENUMzOTIwNEJGNzE5RDMyQjhBQUM2QzdDOEE4NDhDMzhFOTEwMTk4N0ZBQkQ2QUYyMjZFMDVCODU4NjI4NEQwRUVGMDJBMTNBREJERTk2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ASP.NET_SessionId" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cWllMG1wcWR0cHFiZWcwM3d1MmdtbXV2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHJpdmF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Location" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>L3N0YXJzY2xhc3Nyb29tL0xvZ2luLmFzcHg/UmV0dXJuVXJsPSUyZnN0YXJzY2xhc3Nyb29tJTJmU2Nob29sQWRtaW4lMmZPZmZpY2lhbENsYXNzU2NoZWR1bGluZy5hc3B4JTNmT2ZmQ2xhc3MlM2QwMDI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWljcm9zb2Z0LUlJUy84LjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-AspNet-Version" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NC4wLjMwMzE5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9OyBleHBpcmVzPVR1ZSwgMzAtQXVnLTIwMTYgMTU6MDU6MDggR01UOyBwYXRoPS8=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LkFTUFhBVVRIPTsgZXhwaXJlcz1UdWUsIDEyLU9jdC0xOTk5IDA0OjAwOjAwIEdNVDsgcGF0aD0vOyBIdHRwT25seQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-UA-Compatible" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SUU9ZWRnZSxjaHJvbWU9MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAzMCBBdWcgMjAxNyAxNTowNTowOCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTI4MjI5Ng==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzAyIEZvdW5kDQpDYWNoZS1Db250cm9sOiBwcml2YXRlDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KTG9jYXRpb246IC9zdGFyc2NsYXNzcm9vbS9Mb2dpbi5hc3B4P1JldHVyblVybD0lMmZzdGFyc2NsYXNzcm9vbSUyZlNjaG9vbEFkbWluJTJmT2ZmaWNpYWxDbGFzc1NjaGVkdWxpbmcuYXNweCUzZk9mZkNsYXNzJTNkMDAyDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvOC4wDQpYLUFzcE5ldC1WZXJzaW9uOiA0LjAuMzAzMTkNClNldC1Db29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPTsgZXhwaXJlcz1UdWUsIDMwLUF1Zy0yMDE2IDE1OjA1OjA4IEdNVDsgcGF0aD0vDQpTZXQtQ29va2llOiAuQVNQWEFVVEg9OyBleHBpcmVzPVR1ZSwgMTItT2N0LTE5OTkgMDQ6MDA6MDAgR01UOyBwYXRoPS87IEh0dHBPbmx5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNClgtVUEtQ29tcGF0aWJsZTogSUU9ZWRnZSxjaHJvbWU9MQ0KRGF0ZTogV2VkLCAzMCBBdWcgMjAxNyAxNTowNTowOCBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAxMjgyMjk2DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="1302113950" offset="0" length="16384" />
        <PacketInfo time="1302113950" offset="16384" length="16384" />
        <PacketInfo time="1302113950" offset="32768" length="16384" />
        <PacketInfo time="1302113965" offset="49152" length="16384" />
        <PacketInfo time="1302113965" offset="65536" length="16384" />
        <PacketInfo time="1302113965" offset="81920" length="16384" />
        <PacketInfo time="1302113965" offset="98304" length="16384" />
        <PacketInfo time="1302113965" offset="114688" length="16384" />
        <PacketInfo time="1302113981" offset="131072" length="16384" />
        <PacketInfo time="1302113981" offset="147456" length="16384" />
        <PacketInfo time="1302113981" offset="163840" length="16384" />
        <PacketInfo time="1302113981" offset="180224" length="16384" />
        <PacketInfo time="1302113981" offset="196608" length="16384" />
        <PacketInfo time="1302113996" offset="212992" length="16384" />
        <PacketInfo time="1302113996" offset="229376" length="16384" />
        <PacketInfo time="1302113996" offset="245760" length="16384" />
        <PacketInfo time="1302113996" offset="262144" length="16384" />
        <PacketInfo time="1302114012" offset="278528" length="16384" />
        <PacketInfo time="1302114012" offset="294912" length="16384" />
        <PacketInfo time="1302114012" offset="311296" length="16384" />
        <PacketInfo time="1302114012" offset="327680" length="16384" />
        <PacketInfo time="1302114012" offset="344064" length="16384" />
        <PacketInfo time="1302114028" offset="360448" length="16384" />
        <PacketInfo time="1302114028" offset="376832" length="16384" />
        <PacketInfo time="1302114028" offset="393216" length="16384" />
        <PacketInfo time="1302114028" offset="409600" length="16384" />
        <PacketInfo time="1302114028" offset="425984" length="16384" />
        <PacketInfo time="1302114043" offset="442368" length="16384" />
        <PacketInfo time="1302114043" offset="458752" length="16384" />
        <PacketInfo time="1302114043" offset="475136" length="16384" />
        <PacketInfo time="1302114043" offset="491520" length="16384" />
        <PacketInfo time="1302114043" offset="507904" length="16384" />
        <PacketInfo time="1302114059" offset="524288" length="16384" />
        <PacketInfo time="1302114074" offset="540672" length="16384" />
        <PacketInfo time="1302114074" offset="557056" length="16384" />
        <PacketInfo time="1302114090" offset="573440" length="16384" />
        <PacketInfo time="1302114090" offset="589824" length="16384" />
        <PacketInfo time="1302114090" offset="606208" length="16384" />
        <PacketInfo time="1302114090" offset="622592" length="16384" />
        <PacketInfo time="1302114090" offset="638976" length="16384" />
        <PacketInfo time="1302114106" offset="655360" length="16384" />
        <PacketInfo time="1302114106" offset="671744" length="16384" />
        <PacketInfo time="1302114106" offset="688128" length="16384" />
        <PacketInfo time="1302114106" offset="704512" length="16384" />
        <PacketInfo time="1302114106" offset="720896" length="16384" />
        <PacketInfo time="1302114106" offset="737280" length="16384" />
        <PacketInfo time="1302114121" offset="753664" length="16384" />
        <PacketInfo time="1302114121" offset="770048" length="16384" />
        <PacketInfo time="1302114121" offset="786432" length="16384" />
        <PacketInfo time="1302114121" offset="802816" length="16384" />
        <PacketInfo time="1302114121" offset="819200" length="16384" />
        <PacketInfo time="1302114137" offset="835584" length="16384" />
        <PacketInfo time="1302114137" offset="851968" length="16384" />
        <PacketInfo time="1302114137" offset="868352" length="16384" />
        <PacketInfo time="1302114137" offset="884736" length="16384" />
        <PacketInfo time="1302114137" offset="901120" length="16384" />
        <PacketInfo time="1302114137" offset="917504" length="16384" />
        <PacketInfo time="1302114152" offset="933888" length="16384" />
        <PacketInfo time="1302114152" offset="950272" length="16384" />
        <PacketInfo time="1302114152" offset="966656" length="16384" />
        <PacketInfo time="1302114152" offset="983040" length="16384" />
        <PacketInfo time="1302114152" offset="999424" length="16384" />
        <PacketInfo time="1302114168" offset="1015808" length="16384" />
        <PacketInfo time="1302114168" offset="1032192" length="16384" />
        <PacketInfo time="1302114168" offset="1048576" length="16384" />
        <PacketInfo time="1302114168" offset="1064960" length="16384" />
        <PacketInfo time="1302114168" offset="1081344" length="16384" />
        <PacketInfo time="1302114184" offset="1097728" length="16384" />
        <PacketInfo time="1302114184" offset="1114112" length="16384" />
        <PacketInfo time="1302114184" offset="1130496" length="16384" />
        <PacketInfo time="1302114184" offset="1146880" length="16384" />
        <PacketInfo time="1302114184" offset="1163264" length="16384" />
        <PacketInfo time="1302114199" offset="1179648" length="16384" />
        <PacketInfo time="1302114199" offset="1196032" length="16384" />
        <PacketInfo time="1302114199" offset="1212416" length="16384" />
        <PacketInfo time="1302114199" offset="1228800" length="16384" />
        <PacketInfo time="1302114199" offset="1245184" length="16384" />
        <PacketInfo time="1302114215" offset="1261568" length="16384" />
        <PacketInfo time="1302114215" offset="1277952" length="4894" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="3921" hostname="es00vqweb15.qa.appdev" path="/starsclassroom/Login.aspx?ReturnUrl=%2fstarsclassroom%2fSchoolAdmin%2fOfficialClassScheduling.aspx%3fOffClass%3d002" url="https://es00vqweb15.qa.appdev/starsclassroom/Login.aspx?ReturnUrl=%2fstarsclassroom%2fSchoolAdmin%2fOfficialClassScheduling.aspx%3fOffClass%3d002" ip="10.2.55.154" port="443" connectionId="43" origin="Redirection" startDateTime="2017-08-30T11:05:18.103-04:00" startTime="1302114215" endTime="1302114230">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>UmV0dXJuVXJsPSUyZnN0YXJzY2xhc3Nyb29tJTJmU2Nob29sQWRtaW4lMmZPZmZpY2lhbENsYXNzU2NoZWR1bGluZy5hc3B4JTNmT2ZmQ2xhc3MlM2QwMDI=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="ReturnUrl" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JTJmc3RhcnNjbGFzc3Jvb20lMmZTY2hvb2xBZG1pbiUyZk9mZmljaWFsQ2xhc3NTY2hlZHVsaW5nLmFzcHglM2ZPZmZDbGFzcyUzZDAwMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Accept" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1tcy1hcHBsaWNhdGlvbiwgaW1hZ2UvanBlZywgYXBwbGljYXRpb24veGFtbCt4bWwsIGltYWdlL2dpZiwgaW1hZ2UvcGpwZWcsIGFwcGxpY2F0aW9uL3gtbXMteGJhcCwgYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLCBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludCwgYXBwbGljYXRpb24vbXN3b3JkLCAqLyo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9lczAwdnF3ZWIxNS5xYS5hcHBkZXYvc3RhcnNjbGFzc3Jvb20vU2Nob29sQWRtaW4vT2ZmaWNpYWxDbGFzc1NjaGVkdWxpbmcuYXNweD9PZmZDbGFzcz0wMDI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgNy4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFOyBJbmZvUGF0aC4zOyAuTkVUIENMUiAxLjEuNDMyMik=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZXMwMHZxd2ViMTUucWEuYXBwZGV2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zdGFyc2NsYXNzcm9vbS9Mb2dpbi5hc3B4P1JldHVyblVybD0lMmZzdGFyc2NsYXNzcm9vbSUyZlNjaG9vbEFkbWluJTJmT2ZmaWNpYWxDbGFzc1NjaGVkdWxpbmcuYXNweCUzZk9mZkNsYXNzJTNkMDAyIEhUVFAvMS4xDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL3gtbXMtYXBwbGljYXRpb24sIGltYWdlL2pwZWcsIGFwcGxpY2F0aW9uL3hhbWwreG1sLCBpbWFnZS9naWYsIGltYWdlL3BqcGVnLCBhcHBsaWNhdGlvbi94LW1zLXhiYXAsIGFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbCwgYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnQsIGFwcGxpY2F0aW9uL21zd29yZCwgKi8qDQpSZWZlcmVyOiBodHRwczovL2VzMDB2cXdlYjE1LnFhLmFwcGRldi9zdGFyc2NsYXNzcm9vbS9TY2hvb2xBZG1pbi9PZmZpY2lhbENsYXNzU2NoZWR1bGluZy5hc3B4P09mZkNsYXNzPTAwMg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUw0KVXNlci1BZ2VudDogTW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgNy4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFOyBJbmZvUGF0aC4zOyAuTkVUIENMUiAxLjEuNDMyMikNCkROVDogMQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpIb3N0OiBlczAwdnF3ZWIxNS5xYS5hcHBkZXYNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cache-Control" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Pragma" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>LTE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-AspNet-Version" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NC4wLjMwMzE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Set-Cookie" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9bTB6eW0wY2ljZXNydzJvcW91M3lpdGpvOyBkb21haW49ZXMwMHZxd2ViMTU7IHBhdGg9LzsgSHR0cE9ubHk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-UA-Compatible" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SUU9ZWRnZSxjaHJvbWU9MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAzMCBBdWcgMjAxNyAxNTowNTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTk5NTg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNCkV4cGlyZXM6IC0xDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvOC4wDQpYLUFzcE5ldC1WZXJzaW9uOiA0LjAuMzAzMTkNClNldC1Db29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPW0wenltMGNpY2Vzcncyb3FvdTN5aXRqbzsgZG9tYWluPWVzMDB2cXdlYjE1OyBwYXRoPS87IEh0dHBPbmx5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNClgtVUEtQ29tcGF0aWJsZTogSUU9ZWRnZSxjaHJvbWU9MQ0KRGF0ZTogV2VkLCAzMCBBdWcgMjAxNyAxNTowNTowOCBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAxOTk1OA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1302114230" offset="0" length="16384" />
          <PacketInfo time="1302114230" offset="16384" length="3957" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>